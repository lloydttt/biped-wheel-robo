#ifndef IMU_I_H
#define IMU_I_H

#include "EEPROM.h"
#include <Arduino.h>
#include <U8g2lib.h>
#include "I2Cdev.h"
#include "MPU6050_6Axis_MotionApps_V6_12.h"

#if I2CDEV_IMPLEMENTATION == I2CDEV_ARDUINO_WIRE
#include "Wire.h"
#endif

#define LPF_a 0.7 // 滤波系数a(0-1)

#define k1pin 25 //按键IO
#define k2pin 26
#define k3pin 27

#define INTERRUPT_PIN 23 // 陀螺仪外部中断io
MPU6050 mpu;

float LPF_value; //滤波后的值

int show_f = 2; //显示标志位
int start_f = 0;
int jdbz = 0;
char jdbz_press_time = 0;
char jdbz_press_time1 = 0;
float Ts = 0; //周期时间
unsigned long Tt;
unsigned long now_us = 0;
unsigned long velocity_calc_timestamp = 0;

struct
{

  float Q_angle;
  float Q_bias;
  float R_measure;
  float Angle;
  float Angle1;
  float Bias;
  float Rate;
  float Rate1;
  float Rate2;

  float p[2][2];

} KalmanX, KalmanY, KalmanZ;

/* IMU Data */
bool imuReady = false; //
float AngleZ = 0, AngleX = 0, AngleY = 0;
float AngleX_bias = 0, AngleY_bias = 0;
bool dmpReady = false;
uint8_t mpuIntStatus;
uint8_t devStatus;
uint16_t packetSize;
uint8_t fifoBuffer[64];

// orientation/motion vars
Quaternion q;
VectorInt16 aa;
VectorInt16 gy;      // [x, y, z]            gyro sensor measurements
VectorInt16 aaReal;  // [x, y, z]            gravity-free accel sensor measurements
VectorInt16 aaWorld; // [x, y, z]            world-frame accel sensor measurements
VectorFloat gravity; // [x, y, z]            gravity vector
float euler[3];
float ypr[3];

volatile bool mpuInterrupt = false;

boolean key1, key2, key3;
boolean s1, s2, s3;
boolean s1_long_press, s2_long_press, s3_long_press;
char s1_press_time, s2_press_time, s3_press_time, ch5_press_time;
char menu_f = 0;

//.............................................................................................................................................................................

uint8_t n_sample = 8;        //滑动加权滤波算法采样个数
float sample_array[8] = {0}; //采样队列

uint8_t n_sample1 = 8;
float sample_array1[8] = {0};

uint8_t n_sample2 = 8;
float sample_array2[8] = {0};

uint8_t n_sample3 = 8;
float sample_array3[8] = {0};

/////////////////////////////////
int ix, i1, i2, i3, tx, t0, t1, sta;
float V_min, V_max, V_mid;
long Freq;
float Vpp;
float Y[96]; //声明信号值储存数组
float Buffer[192];
const float L[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x70, 0x3F, 0x87, 0xF0, 0xC1, 0x99, 0x83,
    0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x07, 0x30, 0x3F, 0xC7, 0xF8, 0xC1, 0x99, 0xC3,
    0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x06, 0x38, 0x30, 0xC6, 0x1C, 0xC1, 0x99, 0xE3,
    0x18, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0E, 0x18, 0x30, 0xC6, 0x0C, 0xC1, 0x99, 0xF3,
    0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xFC, 0x3F, 0xC6, 0x0C, 0xC1, 0x99, 0xBB,
    0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1F, 0xFC, 0x3F, 0x06, 0x0C, 0xC1, 0x99, 0x9F,
    0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x0E, 0x31, 0x86, 0x1C, 0xE3, 0x99, 0x8F,
    0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0x07, 0x30, 0xC7, 0xF8, 0x7F, 0x19, 0x87,
    0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x78, 0x07, 0xB0, 0xE7, 0xE0, 0x3E, 0x19, 0x87,
    0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x04, 0x92, 0x00, 0x08,
    0x00, 0x00, 0x20, 0x40, 0x80, 0x3E, 0x78, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0xA4, 0x01, 0xFF,
    0xE0, 0x7F, 0xC0, 0x40, 0x80, 0x24, 0x88, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0xC4, 0x02, 0x00,
    0x40, 0x00, 0x00, 0x08, 0x88, 0x24, 0x88, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0F, 0xF7, 0xE2, 0x00,
    0x80, 0x00, 0x00, 0x1F, 0xF8, 0x3C, 0x78, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xCC, 0x81, 0xFF,
    0x80, 0x00, 0x19, 0xA8, 0x90, 0x26, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0xB4, 0x80, 0x02,
    0x03, 0xFF, 0xE0, 0xA8, 0x80, 0x03, 0x14, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x04, 0x94, 0x80, 0x04,
    0x00, 0x24, 0x00, 0x27, 0xF8, 0x7C, 0xE8, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x84, 0x80, 0x0C,
    0x00, 0x24, 0x80, 0x4A, 0x10, 0x0C, 0x40, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x34, 0x87, 0xFF,
    0xF0, 0x44, 0x40, 0x49, 0x20, 0x10, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x07, 0xE3, 0x00, 0x08,
    0x00, 0x44, 0x20, 0x49, 0x20, 0x7E, 0xFE, 0x00,
    0x00, 0x1E, 0x00, 0x00, 0x02, 0x43, 0x00, 0x08,
    0x00, 0x84, 0x10, 0x88, 0xC0, 0x22, 0x88, 0x00,
    0x00, 0x33, 0x00, 0x00, 0x01, 0xC3, 0x00, 0x08,
    0x01, 0x04, 0x10, 0x90, 0xC0, 0x22, 0x88, 0x00,
    0x00, 0x61, 0x80, 0x00, 0x01, 0xB4, 0x80, 0x08,
    0x02, 0x04, 0x00, 0x91, 0x30, 0x22, 0x88, 0x00,
    0x00, 0xC0, 0x80, 0x00, 0x02, 0x08, 0x60, 0x38,
    0x00, 0x1C, 0x00, 0xA6, 0x1C, 0x3E, 0xF8, 0x00,
    0x00, 0x80, 0xC0, 0x00, 0x04, 0x30, 0x00, 0x10,
    0x00, 0x08, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x03,
    0x00, 0x60, 0x00, 0x20, 0x00, 0x18, 0x00, 0x00,
    0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x06,
    0x00, 0x30, 0x00, 0x60, 0x00, 0x18, 0x00, 0x00,
    0x06, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x06,
    0x00, 0x30, 0x00, 0x60, 0x00, 0x18, 0x00, 0x00,
    0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x06,
    0x1E, 0x31, 0xBC, 0xFE, 0x38, 0xDB, 0xC1, 0xD8,
    0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x0C,
    0x3F, 0x19, 0xFE, 0xFE, 0x38, 0xDF, 0xE3, 0xF8,
    0x04, 0x00, 0x18, 0x00, 0x10, 0x00, 0x00, 0x0C,
    0x73, 0x19, 0xC6, 0x63, 0x39, 0x9C, 0x67, 0x38,
    0x0C, 0x00, 0x18, 0x00, 0x18, 0x00, 0x00, 0x0C,
    0x60, 0x19, 0x86, 0x63, 0x6D, 0x98, 0x66, 0x18,
    0x7F, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x0C,
    0x60, 0x19, 0x86, 0x63, 0x6D, 0x98, 0x66, 0x18,
    0x0C, 0x00, 0x08, 0x00, 0x10, 0x00, 0x00, 0x0C,
    0x60, 0x19, 0x86, 0x63, 0x6D, 0x98, 0x66, 0x18,
    0x00, 0x00, 0x08, 0x00, 0x30, 0x00, 0x00, 0x0C,
    0x73, 0x19, 0x86, 0x61, 0xC7, 0x18, 0x67, 0x38,
    0x00, 0x00, 0x0C, 0x00, 0x30, 0x00, 0x00, 0x0C,
    0x3F, 0x19, 0x86, 0x79, 0xC7, 0x18, 0x63, 0xF8,
    0x00, 0x00, 0x0C, 0x00, 0x30, 0x00, 0x00, 0x06,
    0x1E, 0x31, 0x86, 0x39, 0xC7, 0x18, 0x61, 0xD8,
    0x00, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x06,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
    0x00, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x06,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
    0x00, 0x00, 0x06, 0x00, 0x60, 0x00, 0x00, 0x03,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
    0x00, 0x00, 0x06, 0x00, 0x60, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x02, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xC7, 0x04, 0x70, 0x38, 0xE0,
    0x00, 0x00, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x02, 0x28, 0x8C, 0x88, 0x45, 0x10,
    0x00, 0x00, 0x01, 0x01, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x28, 0x94, 0x08, 0x45, 0x10,
    0x00, 0x00, 0x01, 0x81, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x48, 0x84, 0x30, 0x44, 0xE0,
    0x00, 0x00, 0x00, 0xC3, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x88, 0x84, 0x08, 0x45, 0x10,
    0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x08, 0x84, 0x88, 0x45, 0x10,
    0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xE7, 0x04, 0x70, 0x38, 0xE0,
    0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
/////////////////////////////////










#endif